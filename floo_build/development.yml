version: '3.8'

services:

  # Service: Database
  db:
    build: ../postgres
    restart: always
    container_name: floo_db

    user: postgres

    env_file:
      - ../postgres/database.env

    expose:
      - 5432

    volumes:
      # This volume is used for preserving the data of the database
      - type: volume
        source: database
        target: /var/lib/postgresql/data/
        read_only: false
      
    networks: 
      - floo_network
  

  # Service: Channel Layer
  redis:
    build: ../redis
    restart: always
    container_name: floo_redis

    user: redis

    expose:
      - 6379

    networks: 
      - floo_network
  

  # Service: Backend 
  backend:
    build:
      context: ../backend
    restart: always
    container_name: floo_backend

    user: django
    command: sh -c "python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8000"

    expose:
      - 8000
    ports:
      - "54321:8000"

    volumes:
      # Bind mount to map code to the working directory inside the container
      - type: bind
        source: ../backend/code/
        target: /code/
        read_only: true
      
      # Volume to preserve the static files generated by django
      - type: volume
        source: static
        target: /static/
        read_only: false
      
      # Volume to store the media files
      - type: volume
        source: media
        target: /media/
        read_only: false

    depends_on: 
      - db
      - redis

    networks: 
      - floo_network
  
  
  # Service: Frontend
  frontend:
    build: ../frontend
    restart: always
    container_name: floo_frontend

    command: sh -c "yarn start --host 0.0.0.0"

    expose:
      - 3000
    ports:
      - "54320:3000"

    depends_on:
      - backend

    networks:
      - floo_network


volumes:
  # Volume to store the data of database
  database:

  # Volume to store the static files generated by backend
  static:
  
  # Volume to store media files
  media:


networks: 
  floo_network:
