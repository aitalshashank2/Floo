version: '3.8'

services:

  # Service: Database
  db:
    build: ../postgres
    restart: always
    container_name: floo_db

    user: postgres

    env_file:
      - ../postgres/database.env

    expose:
      - 5432    

    volumes:
      # This volume is used for preserving the data of the database
      - type: volume
        source: database
        target: /var/lib/postgresql/data/
        read_only: false
    
    networks:
      - floo_network
  

  # Service: Channel Layer
  redis:
    build: ../redis
    restart: always
    container_name: floo_redis

    user: redis

    expose:
      - 6379

    networks:
      - floo_network
  
  
  # Service: Backend
  backend:
    build:
      context: ../backend
    restart: always
    container_name: floo_backend

    user: django
    command: sh -c "python manage.py collectstatic --no-input && python manage.py migrate && supervisord -c /supervisord.conf"

    expose:
      - 8000
      - 8001

    volumes:
      # Bind mount to map code to the working directory inside the container
      - type: bind
        source: ../backend/code/
        target: /code/
        read_only: true

      # Volume to preserve the static files generated by django
      - type: volume
        source: static
        target: /floo_static/
        read_only: false
      
      # Volume which preserves media files
      - type: volume
        source: media
        target: /floo_media/
        read_only: false
      
      # Volume which preserves server logs
      - type: volume
        source: server_logs
        target: /server_logs/
        read_only: false
    
    depends_on:
      - db
      - redis
    
    networks:
      - floo_network
  

  # Service: Frontend
  frontend:
    build:
      context: ../frontend
    container_name: floo_frontend

    command: sh -c "yarn build"

    volumes:
      # Bind to map the contents of the src/ directory into the container
      - type: bind
        source: ../frontend/src/
        target: /code/src/
        read_only: true

      # Bind to map the contents of the public/ directory into the container
      - type: bind
        source: ../frontend/public/
        target: /code/public/
        read_only: true

      # Volume to preserve the production build of the frontend
      - type: volume
        source: frontend_build
        target: /code/build/
        read_only: false

    networks:
      - floo_network
    

  # Service: Reverse Proxy (NGINX)
  reverse_proxy:
    build:
      context: ../nginx
    restart: always
    container_name: floo_reverse_proxy

    expose:
      - 80
      - 443
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      # Bind mount to map the configuration files to the corresponding directory inside the container
      - type: bind
        source: ../nginx/conf.d/
        target: /etc/nginx/conf.d/
        read_only: true

      # Bind mount to map the SSL certificates to the corresponding directory inside the container
      - type: bind
        source: ../nginx/ssl/
        target: /etc/nginx/ssl/
        read_only: true

      # Access the volume containing the static files created by the backend
      - type: volume
        source: static
        target: /floo_static/
        read_only: true
      
      # Access the volume containing media files
      - type: volume
        source: media
        target: /floo_media/
        read_only: true
      
      # Access the volume containing frontend production build
      - type: volume
        source: frontend_build
        target: /floo_frontend/
        read_only: true
      
      # Volume for storing the log files of the NGINX server
      - type: volume
        source: reverse_proxy_logs
        target: /reverse_proxy_logs/
        read_only: false

      
    depends_on:
      - backend
      - frontend
    
    networks:
      - floo_network


volumes:
  # Volume that stores the data of the database
  database:

  # Volume that preserves the static files generated by the backend
  static:
  # Volume that preserves media files
  media:
  # Volume that preserves server logs
  server_logs:

  # Volume that stores the production build of the frontend
  frontend_build:

  # Volume that preserves log files of the reverse proxy server (NGINX)
  reverse_proxy_logs:


networks:
  floo_network:
